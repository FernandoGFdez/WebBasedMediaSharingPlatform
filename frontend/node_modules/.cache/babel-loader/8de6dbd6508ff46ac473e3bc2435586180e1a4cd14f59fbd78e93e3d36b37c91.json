{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evdr1\\\\Desktop\\\\InstaClone\\\\frontend\\\\src\\\\components\\\\Feed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Post from './Post';\nimport { supabase } from '../supabaseClient';\nimport '../styles/Feed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feed() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Get the current logged-in user\n    const getSession = async () => {\n      const {\n        data: {\n          session\n        }\n      } = await supabase.auth.getSession();\n      setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n    };\n    getSession();\n    const {\n      data: listener\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n    });\n    return () => {\n      listener.subscription.unsubscribe();\n    };\n  }, []);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      let query = supabase.from('posts').select('id, image_url, caption, created_at, user_id, profiles(username, avatar_url)').order('created_at', {\n        ascending: false\n      });\n      if (user) {\n        query = query.neq('user_id', user.id);\n      }\n      const {\n        data,\n        error\n      } = await query;\n      if (!error && data) {\n        setPosts(data);\n      } else {\n        setPosts([]);\n      }\n      setLoading(false);\n    };\n    fetchPosts();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading feed...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts yet. Be the first to upload!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : posts.map(post => {\n      var _post$profiles, _post$profiles2;\n      return /*#__PURE__*/_jsxDEV(Post, {\n        username: ((_post$profiles = post.profiles) === null || _post$profiles === void 0 ? void 0 : _post$profiles.username) || 'Unknown',\n        userAvatar: ((_post$profiles2 = post.profiles) === null || _post$profiles2 === void 0 ? void 0 : _post$profiles2.avatar_url) || 'https://i.pravatar.cc/150?img=1',\n        image: post.image_url,\n        caption: post.caption,\n        likes: post.likes || 0\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Feed, \"KL4wkk3TwTwsE7etTUbx+49IGk8=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useEffect","useState","Post","supabase","jsxDEV","_jsxDEV","Feed","_s","posts","setPosts","loading","setLoading","user","setUser","getSession","data","session","auth","listener","onAuthStateChange","_event","subscription","unsubscribe","fetchPosts","query","from","select","order","ascending","neq","id","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","_post$profiles","_post$profiles2","username","profiles","userAvatar","avatar_url","image","image_url","caption","likes","_c","$RefreshReg$"],"sources":["C:/Users/evdr1/Desktop/InstaClone/frontend/src/components/Feed.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Post from './Post';\r\nimport { supabase } from '../supabaseClient';\r\nimport '../styles/Feed.css';\r\n\r\nfunction Feed() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Get the current logged-in user\r\n    const getSession = async () => {\r\n      const { data: { session } } = await supabase.auth.getSession();\r\n      setUser(session?.user || null);\r\n    };\r\n    getSession();\r\n    const { data: listener } = supabase.auth.onAuthStateChange((_event, session) => {\r\n      setUser(session?.user || null);\r\n    });\r\n    return () => {\r\n      listener.subscription.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      let query = supabase\r\n        .from('posts')\r\n        .select('id, image_url, caption, created_at, user_id, profiles(username, avatar_url)')\r\n        .order('created_at', { ascending: false });\r\n      if (user) {\r\n        query = query.neq('user_id', user.id);\r\n      }\r\n      const { data, error } = await query;\r\n      if (!error && data) {\r\n        setPosts(data);\r\n      } else {\r\n        setPosts([]);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchPosts();\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"feed-container\">\r\n      {loading ? (\r\n        <p>Loading feed...</p>\r\n      ) : posts.length === 0 ? (\r\n        <p>No posts yet. Be the first to upload!</p>\r\n      ) : (\r\n        posts.map(post => (\r\n          <Post\r\n            key={post.id}\r\n            username={post.profiles?.username || 'Unknown'}\r\n            userAvatar={post.profiles?.avatar_url || 'https://i.pravatar.cc/150?img=1'}\r\n            image={post.image_url}\r\n            caption={post.caption}\r\n            likes={post.likes || 0}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}