{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evdr1\\\\Desktop\\\\InstaClone\\\\frontend\\\\src\\\\components\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport '../styles/Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [query, setQuery] = useState('');\n  const location = useLocation();\n  const users = [{\n    username: 'John',\n    avatar: 'https://i.pravatar.cc/150?img=3',\n    fullName: 'John Doe'\n  }, {\n    username: 'JaneSmith',\n    avatar: 'https://i.pravatar.cc/150?img=4',\n    fullName: 'Jane Smith'\n  }, {\n    username: 'Sam',\n    avatar: 'https://i.pravatar.cc/150?img=5',\n    fullName: 'Sam Watson'\n  }, {\n    username: 'JamesBond',\n    avatar: 'https://i.pravatar.cc/150?img=6',\n    fullName: 'James Bond'\n  }];\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const query = queryParams.get('query');\n    setQuery(query || '');\n  }, [location]);\n  const filteredUsers = users.filter(user => user.username.toLowerCase().includes(query.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for users...\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: filteredUsers.length > 0 ? filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${user.username}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar,\n            alt: user.username,\n            className: \"search-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)\n      }, user.username, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No users found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"qNnzAdgT4BbXTteOlY1jtlwePG8=\", false, function () {\n  return [useLocation];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Link","jsxDEV","_jsxDEV","Search","_s","query","setQuery","location","users","username","avatar","fullName","queryParams","URLSearchParams","search","get","filteredUsers","filter","user","toLowerCase","includes","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","length","map","to","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/evdr1/Desktop/InstaClone/frontend/src/components/Search.js"],"sourcesContent":["import React, { useState, useEffect  } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport '../styles/Search.css';\r\n\r\nfunction Search() {\r\n  const [query, setQuery] = useState('');\r\n  const location = useLocation();\r\n  \r\n  const users = [\r\n    { username: 'John', avatar: 'https://i.pravatar.cc/150?img=3', fullName: 'John Doe' },\r\n    { username: 'JaneSmith', avatar: 'https://i.pravatar.cc/150?img=4', fullName: 'Jane Smith' },\r\n    { username: 'Sam', avatar: 'https://i.pravatar.cc/150?img=5', fullName: 'Sam Watson' },\r\n    { username: 'JamesBond', avatar: 'https://i.pravatar.cc/150?img=6', fullName: 'James Bond' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const query = queryParams.get('query');\r\n    setQuery(query || '');\r\n  }, [location]);\r\n\r\n  const filteredUsers = users.filter((user) =>\r\n    user.username.toLowerCase().includes(query.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for users...\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      \r\n      <div className=\"search-results\">\r\n        {filteredUsers.length > 0 ? (\r\n          filteredUsers.map((user) => (\r\n            <div key={user.username} className=\"search-item\">\r\n              <Link to={`/profile/${user.username}`}>\r\n                <img src={user.avatar} alt={user.username} className=\"search-avatar\" />\r\n                <span>{user.fullName}</span>\r\n              </Link>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No users found</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}