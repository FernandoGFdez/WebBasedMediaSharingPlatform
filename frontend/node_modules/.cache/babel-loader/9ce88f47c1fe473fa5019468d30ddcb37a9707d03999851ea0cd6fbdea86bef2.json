{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evdr1\\\\Desktop\\\\InstaClone\\\\frontend\\\\src\\\\components\\\\CommentsModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\nimport '../styles/CommentsModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentsModal({\n  postId,\n  onClose\n}) {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Get current user\n    const getSession = async () => {\n      const {\n        data: {\n          session\n        }\n      } = await supabase.auth.getSession();\n      setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n    };\n    getSession();\n\n    // Fetch comments\n    const fetchComments = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('comments').select(`\n          id,\n          content,\n          created_at,\n          user_id,\n          profiles (\n            username,\n            avatar_url\n          )\n        `).eq('post_id', postId).order('created_at', {\n        ascending: true\n      });\n      if (!error && data) {\n        setComments(data);\n      }\n      setLoading(false);\n    };\n    fetchComments();\n  }, [postId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!user) return;\n    const {\n      error\n    } = await supabase.from('comments').insert([{\n      post_id: postId,\n      user_id: user.id,\n      content: newComment\n    }]);\n    if (!error) {\n      // Refresh comments\n      const {\n        data\n      } = await supabase.from('comments').select(`\n          id,\n          content,\n          created_at,\n          user_id,\n          profiles (\n            username,\n            avatar_url\n          )\n        `).eq('post_id', postId).order('created_at', {\n        ascending: true\n      });\n      if (data) {\n        setComments(data);\n      }\n      setNewComment('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-list\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading comments...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this) : comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this) : comments.map(comment => {\n          var _comment$profiles, _comment$profiles2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ((_comment$profiles = comment.profiles) === null || _comment$profiles === void 0 ? void 0 : _comment$profiles.avatar_url) || 'https://i.pravatar.cc/150?img=1',\n              alt: \"avatar\",\n              className: \"comment-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"comment-username\",\n                children: (_comment$profiles2 = comment.profiles) === null || _comment$profiles2 === void 0 ? void 0 : _comment$profiles2.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), user && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"comment-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Add a comment...\",\n          className: \"comment-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"comment-submit\",\n          disabled: !newComment.trim(),\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentsModal, \"Yq9WI5h67QMENJnkVpuvfrEuhlU=\");\n_c = CommentsModal;\nexport default CommentsModal;\nvar _c;\n$RefreshReg$(_c, \"CommentsModal\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","CommentsModal","postId","onClose","_s","comments","setComments","newComment","setNewComment","loading","setLoading","user","setUser","getSession","data","session","auth","fetchComments","error","from","select","eq","order","ascending","handleSubmit","e","preventDefault","insert","post_id","user_id","id","content","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","length","map","comment","_comment$profiles","_comment$profiles2","src","profiles","avatar_url","alt","username","onSubmit","type","value","onChange","target","placeholder","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Users/evdr1/Desktop/InstaClone/frontend/src/components/CommentsModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../supabaseClient';\r\nimport '../styles/CommentsModal.css';\r\n\r\nfunction CommentsModal({ postId, onClose }) {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Get current user\r\n    const getSession = async () => {\r\n      const { data: { session } } = await supabase.auth.getSession();\r\n      setUser(session?.user || null);\r\n    };\r\n    getSession();\r\n\r\n    // Fetch comments\r\n    const fetchComments = async () => {\r\n      const { data, error } = await supabase\r\n        .from('comments')\r\n        .select(`\r\n          id,\r\n          content,\r\n          created_at,\r\n          user_id,\r\n          profiles (\r\n            username,\r\n            avatar_url\r\n          )\r\n        `)\r\n        .eq('post_id', postId)\r\n        .order('created_at', { ascending: true });\r\n\r\n      if (!error && data) {\r\n        setComments(data);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchComments();\r\n  }, [postId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!user) return;\r\n\r\n    const { error } = await supabase\r\n      .from('comments')\r\n      .insert([\r\n        {\r\n          post_id: postId,\r\n          user_id: user.id,\r\n          content: newComment\r\n        }\r\n      ]);\r\n\r\n    if (!error) {\r\n      // Refresh comments\r\n      const { data } = await supabase\r\n        .from('comments')\r\n        .select(`\r\n          id,\r\n          content,\r\n          created_at,\r\n          user_id,\r\n          profiles (\r\n            username,\r\n            avatar_url\r\n          )\r\n        `)\r\n        .eq('post_id', postId)\r\n        .order('created_at', { ascending: true });\r\n\r\n      if (data) {\r\n        setComments(data);\r\n      }\r\n      setNewComment('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h2>Comments</h2>\r\n          <button className=\"close-button\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"comments-list\">\r\n          {loading ? (\r\n            <p>Loading comments...</p>\r\n          ) : comments.length === 0 ? (\r\n            <p>No comments yet</p>\r\n          ) : (\r\n            comments.map(comment => (\r\n              <div key={comment.id} className=\"comment\">\r\n                <img \r\n                  src={comment.profiles?.avatar_url || 'https://i.pravatar.cc/150?img=1'} \r\n                  alt=\"avatar\" \r\n                  className=\"comment-avatar\"\r\n                />\r\n                <div className=\"comment-content\">\r\n                  <span className=\"comment-username\">{comment.profiles?.username}</span>\r\n                  <p>{comment.content}</p>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        {user && (\r\n          <form onSubmit={handleSubmit} className=\"comment-form\">\r\n            <input\r\n              type=\"text\"\r\n              value={newComment}\r\n              onChange={(e) => setNewComment(e.target.value)}\r\n              placeholder=\"Add a comment...\"\r\n              className=\"comment-input\"\r\n            />\r\n            <button \r\n              type=\"submit\" \r\n              className=\"comment-submit\"\r\n              disabled={!newComment.trim()}\r\n            >\r\n              Post\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentsModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}